[{"title":"如何获取大模型API","path":"/2025/10/18/API/","content":"要获取 Google API（以常见的「Google AI 大模型（如 Gemini）API」和「传统 Google 服务（如日历、人脉）API」为例），需根据场景选择流程，以下是清晰的分步指南： 场景一：获取 Google AI 大模型（如 Gemini）的 API Key适合需要调用 Gemini 等 Google 大模型的场景，参考抖音视频（摘要4、5）和官方流程： 步骤 1：准备基础条件 科学上网：Google 服务需科学上网环境（如切换网络区域为美国、新加坡等）。 Google 账号：拥有 Google 邮箱（用于登录 Google 平台）。 步骤 2：访问 Google AI Studio打开 Google AI Studio（需科学上网），使用 Google 邮箱登录。 步骤 3：解决「项目创建」问题（若遇到报错）若登录后提示 “没有项目，无法创建 API Key” ，需先在 Google Cloud 控制台创建项目： 打开 Google Cloud 控制台，点击右上角「控制台」。 左上角点击「选择项目」→「新建项目」，输入任意项目名称，等待创建完成（通常需 1 - 2 分钟）。 步骤 4：生成 API Key回到 Google AI Studio： 点击右上角「API Keys」。 此时会显示已创建的项目，点击「创建 API Key」，系统会生成专属 API 密钥，复制并妥善保存（后续调用大模型时使用）。 步骤 5：注意事项 地区限制：若提示「地区不可用」，将网络环境切换为澳大利亚、新加坡、美国等支持的区域。 调用限制：以 Gemini 为例，单个项目每天有免费调用次数（如 Gemini 2.5 Pro 每天 100 次，Gemini Flash 每天 250 次）。可通过「多账号 + 多项目」提升次数（一个账号创建 2 - 3 个项目，再注册多个 Google 账号）。 场景二：获取传统 Google 服务（如日历、人脉）的 API适合需要调用 Google 日历、人脉等服务 API 的场景，参考 Google 官方文档（摘要1、2、3）： 步骤 1：访问 Google API Console打开 Google API Console，使用 Google 账号登录。 步骤 2：创建项目点击「选择项目」→「新建项目」，输入项目名称后完成创建。 步骤 3：启用目标 API在「API 库」中搜索需要的 API（如「Google Calendar API」「Google People API」等），点击「启用」。 步骤 4：创建凭据（区分使用场景）Google API 支持两种凭据类型，需根据应用是否需要「用户授权访问个人数据」选择： 场景 A：仅调用公共 API（无需用户授权）创建「API 密钥」： 进入「凭据」页面 → 点击「创建凭据」→ 选择「API 密钥」。 系统生成 API 密钥，直接用于发起 API 请求（如调用公共数据接口）。 场景 B：需访问用户个人数据（如读取日历、联系人）创建「OAuth 2.0 客户端 ID」： 进入「凭据」页面 → 点击「创建凭据」→ 选择「OAuth 2.0 客户端 ID」。 选择应用类型（如「Web 应用」「Android」「iOS」等），填写相关配置（如 Web 应用需填授权回调地址）。 系统生成 client_id 和 client_secret，后续需通过 OAuth 2.0 流程获取「访问令牌」，再用令牌调用 API。 步骤 5：后续使用 API 若用「API 密钥」：直接将密钥加入请求头或参数（参考对应 API 文档的调用格式）。 若用「OAuth 2.0 凭据」：需先引导用户完成授权（跳转 Google 授权页面，用户同意后获取「授权码」），再用「授权码」交换「访问令牌」，最终用「访问令牌」调用 API（需参考 OAuth 2.0 官方流程）。 总结 若需 Google AI 大模型（如 Gemini） ：优先走「Google AI Studio」流程，简单高效，适合个人开发者快速获取 API Key。 若需 传统 Google 服务（如日历、人脉） ：走「Google API Console + 凭据创建」流程，需区分“公共访问”或“用户授权访问”场景。 两种场景都需注意「科学上网」和「Google 账号准备」，部分情况下还需处理“地区限制”和“调用次数”问题～","tags":["科技"],"categories":["AI","教程"]},{"title":"Code Highlight Style test","path":"/2019/07/25/code-highlight/","content":"Make sure all the code blocks highlighted correctly. All the code samples are come from the demo of https://highlightjs.org Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. #[derive(Debug)]pub enum State Start, Transient, Closed,impl Froma str for State fn from(s: a str) - Self match s start = State::Start, closed = State::Closed, _ = unreachable!(), [ title: apples, count: [12000, 20000], description: text: ..., sensitive: false , title: oranges, count: [17500, null], description: text: ..., sensitive: false ] @requires_authorizationdef somefunc(param1=, param2=0): rA docstring if param1 param2: # interesting print Gre\\ater return (param2 - param1 + 1 + 0b10l) or Noneclass SomeClass: pass message = interpreter... prompt !DOCTYPE htmltitleTitle/titlestylebody width: 500px;/stylescript type=application/javascript function $init() return true;/scriptbody p checked class=title id=titleTitle/p !-- here goes the rest of the page --/body function $initHighlight(block, cls) try if (cls.search(/\\bno\\-highlight\\b/) != -1) return process(block, true, 0x0F) + ` class=$cls`; catch (e) /* handle exception */ for (var i = 0 / 2; i classes.length; i++) if (checkCondition(classes[i]) === undefined) console.log(undefined); return ( div web-componentblock/web-component /div )export $initHighlight; #include iostreamint main(int argc, char *argv[]) /* An annoying Hello World example */ for (auto i = 0; i 0xFFFF; i++) cout Hello, World! endl; char c = ; unordered_map string, vectorstring m; m[key] = \\\\\\\\; // this is an error return -2e3 + 12l; CREATE TABLE topic ( id serial NOT NULL PRIMARY KEY, forum_id integer NOT NULL, subject varchar(255) NOT NULL);ALTER TABLE topicADD CONSTRAINT forum_id FOREIGN KEY (forum_id)REFERENCES forum (id);-- Initialsinsert into topic (forum_id, subject)values (2, Dartagnian); #import UIKit/UIKit.h#import Dependency.h@protocol WorldDataSource@optional- (NSString*)worldName;@required- (BOOL)allowsToLive;@end@property (nonatomic, readonly) NSString *title;- (IBAction) show;@end /** * @author John Smith john.smith@example.com*/package l2f.gameserver.model;public abstract class L2Char extends L2Object public static final Short ERROR = 0x0001; public void moveTo(int x, int y, int z) _ai = null; log(Should not be called); if (1 5) // wtf!? return; import Foundation@objc class Person: Entity var name: String! var age: Int! init(name: String, age: Int) /* /* ... */ */ // Return a descriptive string for this person func description(offset: Int = 0) - String return \\(name) is \\(age + offset) years old @font-face font-family: Chunkfive; src: url(Chunkfive.otf);body, .usertext color: #F0F0F0; background: #600; font-family: Chunkfive, sans;@import url(print.css);@media print a[href^=http]::after content: attr(href) # The Greeter classclass Greeter def initialize(name) @name = name.capitalize end def salute puts Hello #@name! endendg = Greeter.new(world)g.salute # MakefileBUILDDIR = _buildEXTRAS ?= $(BUILDDIR)/extras.PHONY: main cleanmain:\t@echo Building main facility...\tbuild_main $(BUILDDIR)clean:\trm -rf $(BUILDDIR)/* package mainimport fmtfunc main() ch := make(chan float64) ch - 1.0e10 // magic number x, ok := - ch defer fmt.Println(`exitting now\\`) go println(len(hello world!)) return #!/bin/bash###### CONFIGACCEPTED_HOSTS=/root/.hag_accepted.confBE_VERBOSE=falseif [ $UID -ne 0 ]then echo Superuser rights required exit 2figenApacheConf() echo -e # Host $HOME_DIR$1/$2 : ; boilerplate[package]name = some_nameauthors = [Author]description = This is \\a description[[lib]]name = $NAMEdefault = Trueauto = nocounter = 1_000"},{"title":"Markdown Style test","path":"/2018/07/24/markdown/","content":"This post is originated from here and is used for testing markdown style. This post contains nearly every markdown usage. Make sure all the markdown elements below show up correctly. Headers# H1## H2### H3#### H4##### H5###### H6Alternatively, for H1 and H2, an underline-ish style:Alt-H1======Alt-H2------ H1H2H3H4H5H6Alternatively, for H1 and H2, an underline-ish style: Alt-H1Alt-H2EmphasisEmphasis, aka italics, with *asterisks* or _underscores_.Strong emphasis, aka bold, with **asterisks** or __underscores__.Combined emphasis with **asterisks and _underscores_**.Strikethrough uses two tildes. ~~Scratch this.~~ Emphasis, aka italics, with asterisks or underscores. Strong emphasis, aka bold, with asterisks or underscores. Combined emphasis with asterisks and underscores. Strikethrough uses two tildes. Scratch this. Lists1. First ordered list item2. Another item * Unordered sub-list.1. Actual numbers dont matter, just that its a number 1. Ordered sub-list4. And another item. You can have properly indented paragraphs within list items. Notice the blank line above, and the leading spaces (at least one, but well use three here to also align the raw Markdown). To have a line break without a paragraph, you will need to use two trailing spaces. Note that this line is separate, but within the same paragraph. (This is contrary to the typical GFM line break behaviour, where trailing spaces are not required.)* Unordered list can use asterisks- Or minuses+ Or pluses- Paragraph In unordered list For example like this.Common Paragraph with some text.And more text. First ordered list item Another item Unordered sub-list. Actual numbers don’t matter, just that it’s a number Ordered sub-list And another item. You can have properly indented paragraphs within list items. Notice the blank line above, and the leading spaces (at least one, but we’ll use three here to also align the raw Markdown). To have a line break without a paragraph, you will need to use two trailing spaces.Note that this line is separate, but within the same paragraph.(This is contrary to the typical GFM line break behaviour, where trailing spaces are not required.) Unordered list can use asterisks Or minuses Or pluses Paragraph In unordered list For example like this. Common Paragraph with some text.And more text. Inline HTMLpTo reboot your computer, press kbdctrl/kbd+kbdalt/kbd+kbddel/kbd./p To reboot your computer, press ctrl+alt+del. dl dtDefinition list/dt ddIs something people use sometimes./dd dtMarkdown in HTML/dt ddDoes *not* work **very** well. Use HTML emtags/em./dd/dl Definition list Is something people use sometimes. dtMarkdown in HTML/dt ddDoes *not* work **very** well. Use HTML emtags/em./dd Links[Im an inline-style link](https://www.google.com)[Im an inline-style link with title](https://www.google.com Googles Homepage)[Im a reference-style link][Arbitrary case-insensitive reference text][Im a relative reference to a repository file](../blob/master/LICENSE)[You can use numbers for reference-style link definitions][1]Or leave it empty and use the [link text itself]Some text to show that the reference links can follow later.[arbitrary case-insensitive reference text]: https://hexo.io[1]: https://hexo.io/docs/[link text itself]: https://hexo.io/api/ I’m an inline-style link I’m an inline-style link with title I’m a reference-style link I’m a relative reference to a repository file You can use numbers for reference-style link definitions Or leave it empty and use the link text itself Some text to show that the reference links can follow later. Imageshover to see the title text:Inline-style:![alt text](https://hexo.io/icon/favicon-196x196.png Logo Title Text 1)Reference-style:![alt text][logo][logo]: https://hexo.io/icon/favicon-196x196.png Logo Title Text 2 hover to see the title text: Inline-style: Reference-style: Code and Syntax HighlightingInline code has back-ticks around it. var s = JavaScript syntax highlighting;alert(s); s = Python syntax highlightingprint s No language indicated, so no syntax highlighting.But lets throw in a btag/b. Tables| |ASCII |HTML ||----------------|-------------------------------|-----------------------------||Single backticks|`Isnt this fun?` |Isnt this fun? ||Quotes |`Isnt this fun?` |Isnt this fun? ||Dashes |`-- is en-dash, --- is em-dash`|-- is en-dash, --- is em-dash| ASCII HTML Single backticks Isnt this fun? ‘Isn’t this fun?’ Quotes Isnt this fun? “Isn’t this fun?” Dashes -- is en-dash, --- is em-dash – is en-dash, — is em-dash Colons can be used to align columns. | Tables | Are | Cool || ------------- |:-------------:| -----:|| col 3 is | right-aligned | || col 2 is | centered | || zebra stripes | are neat | Tables Are Cool col 3 is right-aligned col 2 is centered zebra stripes are neat The outer pipes (|) are optional, and you don’t need to make the raw Markdown line up prettily. You can also use inline Markdown. Markdown | Less | Pretty--- | --- | ---*Still* | `renders` | **nicely**1 | 2 | 3 Markdown Less Pretty Still renders nicely 1 2 3 You can find more information about LaTeX mathematical expressions here. Blockquotes Blockquotes are very handy in email to emulate reply text.This line is part of the same quote. Quote break. This is a very long line that will still be quoted properly when it wraps. Oh boy let’s keep writing to make sure this is long enough to actually wrap for everyone. Oh, you can put Markdown into a blockquote. Horizontal RuleThree or more… ---Hyphens***Asterisks___Underscores Hyphens Asterisks Underscores Line BreaksHeres a line for us to start with.This line is separated from the one above by two newlines, so it will be a *separate paragraph*.This line is also a separate paragraph, but...This line is only separated by a single newline, so its a separate line in the *same paragraph*. Here’s a line for us to start with. This line is separated from the one above by two newlines, so it will be a separate paragraph. This line is also a separate paragraph, but…This line is only separated by a single newline, so it’s a separate line in the same paragraph. This is a regular paragraph.table tr tdFoo/td /tr/tableThis is another regular paragraph. This is a regular paragraph. Foo This is another regular paragraph. Youtube videosa href=https://www.youtube.com/watch?feature=player_embeddedv=ARted4RniaU target=_blankimg src=https://img.youtube.com/vi/ARted4RniaU/0.jpgalt=IMAGE ALT TEXT HERE width=240 height=180 border=10 //aPure markdown version:[![IMAGE ALT TEXT HERE](https://img.youtube.com/vi/ARted4RniaU/0.jpg)](https://www.youtube.com/watch?v=ARted4RniaU) Pure markdown version:","tags":["Foo","Bar"]},{"title":"Images","path":"/2013/12/26/images/","content":"This is a image test post."},{"path":"/2013/12/25/no-title/","content":"This post doesn’t have a title. Make sure it’s accessible."},{"title":"Excerpts","path":"/2013/12/25/excerpts/","content":"The following contents should be invisible in homearchive page. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce eget urna vitae velit eleifend interdum at ac nisi. In nec ligula lacus. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Sed eu cursus erat, ut dapibus quam. Aliquam eleifend dolor vitae libero pharetra adipiscing. Etiam adipiscing dolor a quam tempor, eu convallis nulla varius. Aliquam sollicitudin risus a porta aliquam. Ut nec velit dolor. Proin eget leo lobortis, aliquam est sed, mollis mauris. Fusce vitae leo pretium massa accumsan condimentum. Fusce malesuada gravida lectus vel vulputate. Donec bibendum porta nibh ut aliquam. Sed lorem felis, congue non fringilla eu, aliquam eu eros. Curabitur orci libero, mollis sed semper vitae, adipiscing in lectus. Aenean non egestas odio. Donec sollicitudin nisi quis lorem gravida, in pharetra mauris fringilla. Duis sit amet faucibus dolor, id aliquam neque. In egestas, odio gravida tempor dictum, mauris felis faucibus purus, sit amet commodo lacus diam vitae est. Ut ut quam eget massa semper sodales. Aenean non ipsum cursus, blandit lectus in, ornare odio. Curabitur ultrices porttitor vulputate."},{"title":"Topic Test 2","path":"/2013/12/25/topic2/","content":"This is a topic test post."},{"title":"Gallery Post","path":"/2013/12/25/gallery-post/","content":"This post contains 4 photos: Widescreen wallpaper Portrait photo Dual widescreen wallpaper Small photo All photos should be displayed properly. From Wallbase.cc"},{"title":"Tag Plugins","path":"/2013/12/25/tag-plugins/","content":"This post is used for testing tag plugins. See docs for more info. Block QuoteNormal blockquote Praesent diam elit, interdum ut pulvinar placerat, imperdiet at magna. Quote from a bookDo not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy. David LevithanWide Awake Quote from TwitterNEW: DevDocs now comes with syntax highlighting. http://devdocs.io @DevDocstwitter.com/devdocs/status/356095192085962752 Quote from an article on the webEvery interaction is both precious and an opportunity to delight. Seth GodinWelcome to Island Marketing Code BlockNormal code blockalert(Hello World!); With captionArray.maparray.map(callback[, thisArg]) With caption and URL.compactUnderscore.js.compact([0, 1, false, 2, ‘’, 3]);= [1, 2, 3] With marked linesLine 1,7-8,10 should be marked with different color. const http = require(http);const hostname = 127.0.0.1;const port = 1337;http.createServer((req, res) = res.writeHead(200, Content-Type: text/plain ); res.end(Hello World );).listen(port, hostname, () = console.log(`Server running at http://$hostname:$port/`);); Note: Theme’s style should support .highlight.line.marked (recommend to use the selection or current line color). PullquoteLeftLorem ipsum dolor sit amet, consectetur adipiscing elit. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas tempus molestie arcu, et fringilla mauris placerat ac. Nullam luctus bibendum risus. Ut cursus sed ipsum feugiat egestas. Suspendisse elementum, velit eu consequat consequat, augue lorem dapibus libero, eget pulvinar dolor est sit amet nulla. Suspendisse a porta tortor, et posuere mi. Pellentesque ultricies, mi quis volutpat malesuada, erat felis vulputate nisl, ac congue ante tortor ut ante. Proin aliquam sem vel mauris tincidunt, eget scelerisque tortor euismod. Nulla tincidunt enim nec commodo dictum. Mauris id sapien et orci gravida luctus id ut dui. In vel vulputate odio. Duis vel turpis molestie, scelerisque enim eu, lobortis eros. Cras at ipsum gravida, sagittis ante vel, viverra tellus. Nunc mauris turpis, elementum ullamcorper nisl pretium, ultrices cursus justo. Mauris porttitor commodo eros, ac ornare orci interdum in. Cras fermentum cursus leo sed mattis. In dignissim lorem sem, sit amet elementum mauris venenatis ac. RightLorem ipsum dolor sit amet, consectetur adipiscing elit. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed ligula justo, lobortis sit amet semper vel, dignissim sit amet libero. Praesent ac tempus ligula. Maecenas at gravida odio. Etiam tristique volutpat lacus eu faucibus. Donec non tempus arcu. Phasellus adipiscing, mauris nec mollis egestas, ipsum nunc auctor velit, et rhoncus lorem ipsum at ante. Praesent et sem in velit volutpat auctor. Duis vel mauris nulla. Maecenas mattis interdum ante, quis sagittis nibh cursus et. Nulla facilisi. Morbi convallis gravida tortor, ut fermentum enim gravida et. Nunc vel dictum nisl, non ultrices libero. Proin vestibulum felis eget orci consectetur lobortis. Vestibulum augue nulla, iaculis vitae augue vehicula, dignissim ultrices libero. Sed imperdiet urna et quam ultrices tincidunt nec ac magna. Etiam vel pharetra elit."},{"title":"如何发布第一个项目","path":"/2013/12/24/第一个项目/","content":"一、基础准备（10分钟）1. 注册GitHub账号 访问GitHub官网，点击右上角Sign up 填写邮箱、用户名和密码（建议使用强密码） 完成人机验证后，进入邮箱点击验证链接激活账号 2. 安装Git客户端 Windows：下载Git for Windows macOS：通过Homebrew安装：brew install git Linux：使用包管理工具：sudo apt-get install git 安装完成后，打开命令行工具（Windows用Git Bash，macOSLinux用终端），配置个人信息： git config --global user.name 你的GitHub用户名git config --global user.email 你的注册邮箱 验证配置：git config –list 3. 安装GitHub Desktop（可选） 下载地址：GitHub Desktop 适合不熟悉命令行的用户，通过图形界面完成代码提交、分支管理等操作 二、创建第一个项目（20分钟）1. 在GitHub创建远程仓库 登录后点击右上角+ → New repository 填写仓库信息： Repository name：建议与项目名称一致（如my-first-project） Description：简要描述项目用途 Visibility：选择Public（公开免费） 勾选Add a README file（自动生成项目说明文件） 点击Create repository完成创建 2. 克隆仓库到本地 打开命令行，执行克隆命令（替换为你的仓库URL）： git clone https://github.com/你的用户名/my-first-project.git 进入项目目录：cd my-first-project 3. 添加并提交代码 创建一个测试文件（如index.html）： h1Hello, GitHub!/h1p这是我的第一个GitHub项目/p 将文件添加到暂存区： git add index.html 提交更改并添加描述： git commit -m Add initial HTML file （-m参数用于添加提交说明，建议清晰描述改动内容） 4. 推送代码到GitHub 关联远程仓库（通常克隆时已自动关联）： git remote add origin https://github.com/你的用户名/my-first-project.git 推送代码到主分支： git push -u origin main （首次推送需输入GitHub账号密码，后续可配置SSH密钥免密登录） 三、关键操作与工具（30分钟）1. 使用SSH密钥免密登录 生成SSH密钥（在命令行执行）： ssh-keygen -t rsa -b 4096 -C 你的邮箱 按回车键使用默认路径和空密码 复制公钥内容： # Windowsclip ~/.ssh/id_rsa.pub# macOSpbcopy ~/.ssh/id_rsa.pub# Linuxcat ~/.ssh/id_rsa.pub 登录GitHub → Settings → SSH and GPG keys → New SSH key，粘贴公钥并保存 2. 使用GitHub Desktop简化操作 克隆仓库：点击File → Clone repository，选择远程仓库并指定本地路径 提交代码：直接在界面修改文件后，填写提交信息并点击Commit to main 推送代码：点击Push origin完成同步 3. 版本回退与冲突解决 撤销未提交的更改： git checkout -- 文件名 # 撤销单个文件git checkout . # 撤销所有未提交更改 回退到历史版本： git log --oneline # 查看提交历史git reset --hard 提交哈希值 # 回退到指定版本（谨慎操作！） 解决合并冲突： 当多人修改同一文件时，拉取代码可能出现冲突。在文件中找到冲突标记（​ ​ ​），手动编辑后保存，重新提交 四、项目维护与协作（40分钟）1. 使用Issues管理任务 在仓库页面点击Issues → New issue 填写标题和描述，可添加标签（Labels）、指派负责人（Assignees） 完成后点击Submit new issue，任务状态会自动跟踪 2. 创建分支进行开发 创建并切换分支： git branch feature/new-page # 创建分支git checkout feature/new-page # 切换分支 或一步完成：git checkout -b featurenew-page 合并分支到主分支： git checkout main # 切换回主分支git merge feature/new-page # 合并分支 删除分支： git branch -d feature/new-page # 删除本地分支git push origin --delete feature/new-page # 删除远程分支 3. 发起Pull Request进行代码审查 推送分支到远程： git push origin feature/new-page 进入GitHub仓库页面，点击Compare pull request 填写说明并选择审查人，点击Create pull request 审查通过后，点击Merge pull request合并代码 五、进阶功能（可选）1. 部署静态网站（GitHub Pages） 创建仓库命名为你的用户名.github.io 推送HTMLCSSJS文件到主分支 访问https:你的用户名.github.io即可查看网站 2. 使用Actions自动化流程 在仓库根目录创建.githubworkflows目录 添加ci.yml文件，定义自动化任务（如代码测试、部署）： name: CIon: [push]jobs: build: runs-on: ubuntu-latest steps: - uses: actions/checkout@v3 - name: Run tests run: npm install npm test 提交文件后，GitHub会自动触发工作流 六、学习资源推荐 官方文档： GitHub学习中心：包含互动教程和分步指南 Git官方文档：深入理解版本控制原理 视频教程： GitHub官方YouTube频道：5分钟快速教程 FreeCodeCamp Git教程：适合初学者的免费课程 书籍推荐： 《Pro Git》：免费在线版(链接)，Git权威指南 《GitHub入门与实践》：结合实际案例讲解协作开发 七、常见问题解决 推送代码失败： 提示Permission denied：检查SSH密钥是否正确配置 提示Updates were rejected：先拉取远程最新代码：git pull –rebase origin main 忘记Git命令： 使用git help 命令查看帮助，如git help commit 安装git-extras插件，提供更友好的提示：brew install git-extras（macOS） 文件未被Git跟踪： 检查是否在.gitignore中被排除，编辑该文件并重新提交 通过以上步骤，你可以在1小时内完成从注册到发布项目的全流程，并掌握基础的版本控制和协作技能。建议从简单项目开始实践，逐步探索GitHub的强大功能。遇到问题时，GitHub社区和文档是最好的帮手！ 🚀","categories":["一级分类","二级分类"]},{"title":"Tags","path":"/2013/12/24/tags/","content":"暂无内容。","tags":["科技","文化","艺术"]},{"title":"Elements","path":"/2013/12/24/elements/","content":"The purpose of this post is to help you make sure all of HTML elements can display properly. If you use CSS reset, don’t forget to redefine the style by yourself. Heading 1Heading 2Heading 3Heading 4Heading 5Heading 6 ParagraphLorem ipsum dolor sit amet, test link consectetur adipiscing elit. Strong text pellentesque ligula commodo viverra vehicula. Italic text at ullamcorper enim. Morbi a euismod nibh. Underline text non elit nisl. Deleted text tristique, sem id condimentum tempus, metus lectus venenatis mauris, sit amet semper lorem felis a eros. Fusce egestas nibh at sagittis auctor. Sed ultricies ac arcu quis molestie. Donec dapibus nunc in nibh egestas, vitae volutpat sem iaculis. Curabitur sem tellus, elementum nec quam id, fermentum laoreet mi. Ut mollis ullamcorper turpis, vitae facilisis velit ultricies sit amet. Etiam laoreet dui odio, id tempus justo tincidunt id. Phasellus scelerisque nunc sed nunc ultricies accumsan. Interdum et malesuada fames ac ante ipsum primis in faucibus. Sed erat diam, blandit eget felis aliquam, rhoncus varius urna. Donec tellus sapien, sodales eget ante vitae, feugiat ullamcorper urna. Praesent auctor dui vitae dapibus eleifend. Proin viverra mollis neque, ut ullamcorper elit posuere eget. Praesent diam elit, interdum ut pulvinar placerat, imperdiet at magna. Maecenas ornare arcu at mi suscipit, non molestie tortor ultrices. Aenean convallis, diam et congue ultricies, erat magna tincidunt orci, pulvinar posuere mi sapien ac magna. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Praesent vitae placerat mauris. Nullam laoreet ante posuere tortor blandit auctor. Sed id ligula volutpat leo consequat placerat. Mauris fermentum dolor sed augue malesuada sollicitudin. Vivamus ultrices nunc felis, quis viverra orci eleifend ut. Donec et quam id urna cursus posuere. Donec elementum scelerisque laoreet. List TypesDefinition List (dl)Definition List TitleThis is a definition list division. Ordered List (ol) List Item 1 List Item 2 List Item 3 Unordered List (ul) List Item 1 List Item 2 List Item 3 Checkbox List (ul) List Item 1 unchecked List Item 2 checked List Item 3 checked Table Table Header 1 Table Header 2 Table Header 3 Division 1 Division 2 Division 3 Division 1 Division 2 Division 3 Division 1 Division 2 Division 3 Misc Stuff - abbr, acronym, sub, sup, kbd, etc.Lorem superscript dolor subscript amet, consectetuer adipiscing elit. Nullam dignissim convallis est. Quisque aliquam. cite. Nunc iaculis suscipit dui. Nam sit amet sem. Aliquam libero nisi, imperdiet at, tincidunt nec, gravida vehicula, nisl. Praesent mattis, massa quis luctus fermentum, turpis mi volutpat justo, eu volutpat enim diam eget metus. Maecenas ornare tortor. Donec sed tellus eget sapien fringilla nonummy. NBA Mauris a ante. Suspendisse quam sem, consequat at, commodo vitae, feugiat in, nunc. Morbi imperdiet augue quis tellus. AVE. Use Crtl + C to stop."},{"title":"Topic Test","path":"/2002/12/25/topic/","content":"This is a topic test post."},{"title":"探索","path":"/explore/index.html","content":"…"},{"title":"关于","path":"/about/index.html","content":"留言关于Aki简介 👩‍💻 关于我05后，学生，软件工程专业在读📍 在代码的世界里探索无限可能✨ 享受从逻辑推理到代码实现的创造过程 💻 技术探索目前正专注于夯实计算机基础，渴望深入理解系统层面的奥秘： 数据结构与算法 - 享受用优雅的方式解决复杂问题 计算机组成原理 - 探寻指令在硬件上的舞蹈 操作系统 - 理解程序如何与硬件高效对话 计算机网络 - 探索数据在世界中流动的规则 C++Java - 体会不同编程范式背后的设计哲学 🌟 成长经历 算法竞赛 大一时获得蓝桥杯C++大学B组一等奖 英语能力 - 能流畅阅读技术文档和原版教材 信息汲取 - 习惯于在 GitHub 上研究优秀项目，在 YouTube 追踪技术动态 快速实践 - 乐于将新想法快速付诸实践，如搭建本网站 📚 学习方向期待在以下领域深入探索： 系统编程与性能优化 分布式系统设计 编译器原理与实现 深知学海无涯，乐于埋头耕耘相信时间的力量，相信复利的成长 🚀"},{"title":"收藏","path":"/bookmark/index.html","content":"…"},{"title":"留言","path":"/friends/index.html","content":"留言关于Keep_FocusingKeep_Communicating 📝 保持专注这个网站是我记录学习与思考的地方。为了维持一个高质量的创作环境，我选择不开放公开留言框。 如果您有兴趣，或愿意为我提供宝贵的意见，我会非常珍惜。 ✨ 欢迎指导作为代码小白，我真诚期待： 技术大佬的指点 🎯 同路人的交流 👥 前辈的经验分享 💡 项目合作机会 🤝 📮 联系渠道📧 邮箱: 105615970@qq.com 我会认真阅读每一条信息，并在我能力范围内尽力回复。 感谢您的理解。 成长路上，感恩每一份遇见期待与您交流技术、分享经验、共同进步 🎉"},{"title":"朋友文章","path":"/friends/rss/index.html","content":""},{"title":"Page","path":"/page/index.html","content":"This is a page test."}]